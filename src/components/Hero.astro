---
import { Icon } from 'astro-icon/components';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const technologies = [
  { name: 'C#', icon: 'simple-icons:csharp', color: '#A020F0' },
  { name: 'Python', icon: 'logos:python', color: '#eab308' },
  { name: 'Java', icon: 'logos:java', color: '#ef4444' },
  { name: 'Flutter', icon: 'logos:flutter', color: '#06b6d4' },
  { name: 'Dart', icon: 'logos:dart', color: '#3b82f6' },
  { name: 'TypeScript', icon: 'logos:typescript-icon', color: '#2563eb' },
  { name: 'React', icon: 'logos:react', color: '#06b6d4' },
  { name: 'Next.js', icon: 'logos:nextjs-icon', color: '#374151' },
  { name: 'Tailwind CSS', icon: 'logos:tailwindcss-icon', color: '#06b6d4' },
  { name: 'Astro', icon: 'logos:astro-icon', color: '#f97316' },
  { name: 'Git', icon: 'logos:git-icon', color: '#ef4444' },
  { name: 'PostgreSQL', icon: 'logos:postgresql', color: '#3b82f6' },
  { name: 'Docker', icon: 'logos:docker-icon', color: '#06b6d4' },
  { name: 'AWS', icon: 'logos:aws', color: '#f97316' },
  { name: 'IA', icon: 'mdi:brain', color: '#8b5cf6' },
];
---

<section id="home" class="relative min-h-screen flex items-center justify-center overflow-hidden pt-24 sm:pt-28 lg:pt-32">
  <div class="absolute inset-0 z-0">
    <div class="absolute top-1/4 left-1/4 w-80 h-80 sm:w-96 sm:h-96 lg:w-[500px] lg:h-[500px] bg-gradient-to-r from-white/10 to-white/10 rounded-full blur-3xl animate-glow-subtle"></div>
    <div class="absolute bottom-1/4 right-1/4 w-64 h-64 sm:w-80 sm:h-80 lg:w-96 lg:h-96 bg-gradient-to-r from-white/10 to-white/10 rounded-full blur-3xl animate-glow-subtle" style="animation-delay: 2s;"></div>
  </div>

  <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class="max-w-7xl mx-auto">
      <div class="grid lg:grid-cols-2 gap-16 lg:gap-20 xl:gap-24 items-center">
        
        <div class="text-center lg:text-left space-y-8 lg:space-y-10">
          <div class="inline-flex items-center px-6 py-3 rounded-full glassmorphism-clean border border-white/30 hover:border-white/50 transition-all duration-300">
            <div class="w-3 h-3 dark:bg-white bg-black rounded-full animate-pulse mr-4"></div>
            <span class="text-sm sm:text-base font-medium dark:text-slate-300 light:text-slate-700">
              {t('hero.welcome')} <span class="dark:text-white light:text-black font-bold">{t('hero.name')}</span> {t('hero.and')}
            </span>
          </div>

          <div class="space-y-6">
            <h1 class="text-responsive-xl font-bold font-display leading-tight">
              <span class="block holographic-clean animate-float-clean">
                {t('hero.title')}
              </span>
            </h1>
            
            <div class="text-responsive-md dark:text-slate-400 light:text-slate-600 max-w-2xl mx-auto lg:mx-0">
              <p class="leading-relaxed">
                {t('hero.description')}
              </p>
            </div>
          </div>

          <div class="flex flex-col sm:flex-row gap-4 lg:gap-6 justify-center lg:justify-start">
            <a 
              href="#projects"
              class="group relative px-8 py-4 rounded-2xl font-semibold overflow-hidden transition-all duration-300 hover:scale-105 btn-clean"
            >
              <span class="relative flex items-center justify-center gap-2">
                {t('hero.viewProjects')}
                <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
              </span>
            </a>
            
            <a 
              href="#contact"
              class="px-8 py-4 rounded-2xl font-semibold glassmorphism-clean border border-white/30 dark:text-slate-200 light:text-slate-800 hover:scale-105 hover:shadow-lg transition-all duration-300 hover:border-white/50"
            >
              {t('hero.enterContact')}
            </a>
          </div>
        </div>

        <div class="flex flex-col items-center justify-center order-first lg:order-last">
          <div class="relative w-80 h-80 sm:w-96 sm:h-96 md:w-[450px] md:h-[450px] lg:w-[500px] lg:h-[500px]">
            
            <div class="absolute inset-0 flex items-center justify-center z-5">
              <div class="relative">
                <div class="absolute -inset-4 bg-gradient-to-r from-white/30 to-white/30 rounded-full blur-xl opacity-60"></div>
                <img 
                  src="/perfil.png" 
                  alt="Isaac Mello" 
                  class="relative w-32 h-32 sm:w-40 sm:h-40 md:w-48 md:h-48 lg:w-56 lg:h-56 rounded-full border-4 border-white/50 object-cover shadow-2xl"
                />
              </div>
            </div>

            <div class="wheel-container absolute inset-0 z-10">
              {technologies.map((tech, index) => {
                const angle = (index / technologies.length) * 360;
                return (
                  <div 
                    class="tech-item relative z-20"
                    style={`--angle: ${angle}deg; --index: ${index};`}
                  >
                    <div class="tech-icon group/tech cursor-pointer">
                      <div class="relative w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 lg:w-18 lg:h-18 overflow-hidden">
                        <div class="absolute inset-0 rounded-full blur-sm opacity-0 group-hover/tech:opacity-50 transition-opacity duration-300" style={`background: radial-gradient(circle at center, ${tech.color} 0%, ${tech.color}40 50%, transparent 80%);`}></div>
                        <div class="relative w-full h-full rounded-full flex items-center justify-center border dark:border-white/40 transition-all duration-300">
                          <Icon 
                            name={tech.icon} 
                            class="w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 lg:w-9 lg:h-9"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .wheel-container {
    animation: rotate-wheel 40s linear infinite;
  }

  .tech-item {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    transform-origin: center;
    transform: rotate(var(--angle)) translateY(-140px);
  }

  .tech-icon {
    transform: translate(-50%, -50%);
    cursor: pointer;
    transition: all 0.3s ease;
    width: 48px;
    height: 48px;
    pointer-events: all;
  }

  @media (min-width: 640px) {
    .tech-icon {
      width: 56px;
      height: 56px;
    }
  }

  @media (min-width: 768px) {
    .tech-icon {
      width: 64px;
      height: 64px;
    }
  }

  @media (min-width: 1024px) {
    .tech-icon {
      width: 72px;
      height: 72px;
    }
  }

  @keyframes rotate-wheel {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @media (max-width: 640px) {
    .tech-item {
      transform: rotate(var(--angle)) translateY(-120px);
    }
  }

  @media (min-width: 641px) and (max-width: 768px) {
    .tech-item {
      transform: rotate(var(--angle)) translateY(-140px);
    }
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    .tech-item {
      transform: rotate(var(--angle)) translateY(-165px);
    }
  }

  @media (min-width: 1025px) {
    .tech-item {
      transform: rotate(var(--angle)) translateY(-185px);
    }
  }
</style>
